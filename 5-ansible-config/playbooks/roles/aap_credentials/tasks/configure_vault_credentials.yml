# ---
- name: Fetch HCP Vault SSH signing public certificate for each organization
  uri:
    url: "{{ vault_url }}/v1/ssh/public_key"
    headers:
      X-Vault-Namespace: "admin/{{ item.name }}"
    method: GET
    return_content: yes
  register: vault_cert_response
  loop: "{{ aap_organizations }}"
  loop_control:
    loop_var: item

- name: Store certificates in a dictionary
  set_fact:
    vault_certificates: >-
      {{
        vault_certificates | default({}) | combine({
          item.item.name: item.content
        })
      }}
  loop: "{{ vault_cert_response.results }}"
  loop_control:
    loop_var: item

- name: Debug the certificates (optional)
  debug:
    msg: "{{ vault_certificates }}"


- name: Configure AppRole for HashiCorp Vault SSH Credential
  ansible.controller.credential:
    name: "hashicorp_vault_ssh_approle"                  # Name of the credential
    description: "Credential for HashiCorp Vault AppRole integration"
    organization: "{{ item.name }}"                     # Organization name in AAP
    credential_type: "HashiCorp Vault Signed SSH"       # Type of the credential
    state: present                                      # Ensures the credential is updated or created if absent
    inputs:                                             # All required fields for this credential type
      url: "{{ vault_url }}"                            # Server URL (VAULT_ADDR)
      cacert: ""                     # CA Certificate if applicable
      role_id: ""                    # Vault AppRole role_id
      secret_id: ""                # Vault AppRole secret_id
      default_auth_path: "approle"                      # Path to the Vault AppRole auth method
      namespace: "{{ item.name }}"                      # Vault namespace if applicable
    controller_host: "{{ aap_url }}"                    # URL of your AAP instance
    controller_username: "admin"                        # AAP username
    controller_password: "{{ aap_password }}"           # AAP password
    validate_certs: false                               # Skip SSL verification if using self-signed certs
  loop: "{{ aap_organizations }}"
  register: vault_credentials

- name: Display Credential Status
  debug:
    msg: "Credential update response: {{ vault_credentials }}"

# ---
- name: Configure Machine Credentials using Vault Signed SSH
  ansible.controller.credential:
    name: "minecraft_ssh_credentials"                  # Name of the credential
    description: "Credentials for Minecraft SSH"       # Description of the credential
    organization: "{{ item.name }}"                     # Organization name in AAP
    credential_type: "Machine"                          # Type of the credential
    state: present                                      # Ensures the credential is updated or created if absent
    inputs:                                             # All required fields for this credential type
     username: ubuntu                                      
    controller_host: "{{ aap_url }}"                    # URL of your AAP instance
    controller_username: "admin"                        # AAP username
    controller_password: "{{ aap_password }}"           # AAP password
    validate_certs: false                               # Skip SSL verification if using self-signed certs
  loop: "{{ aap_organizations }}"
  register: vault_credentials